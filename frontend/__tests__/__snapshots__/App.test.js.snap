// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "flex": 1,
        "overflow": "hidden",
      }
    }
  >
    <View
      pointerEvents="auto"
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          Array [
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            Object {
              "zIndex": 0,
            },
          ],
        ]
      }
    >
      <View
        collapsable={false}
        pointerEvents="auto"
        removeClippedSubviews={false}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          style={
            Array [
              Object {
                "backgroundColor": "rgb(242, 242, 242)",
                "flex": 1,
              },
              Array [
                Object {
                  "flex": 1,
                  "flexDirection": "column-reverse",
                },
                undefined,
              ],
            ]
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View />
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "zIndex": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "rgb(255, 255, 255)",
                    "borderBottomColor": "rgb(216, 216, 216)",
                    "flex": 1,
                    "shadowColor": "rgb(216, 216, 216)",
                    "shadowOffset": Object {
                      "height": 0.5,
                      "width": 0,
                    },
                    "shadowOpacity": 0.85,
                    "shadowRadius": 0,
                  }
                }
              />
            </View>
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "height": 44,
                  "maxHeight": undefined,
                  "minHeight": undefined,
                  "opacity": undefined,
                  "transform": undefined,
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "height": 0,
                  }
                }
              />
              <View
                pointerEvents="box-none"
                style={
                  Object {
                    "alignItems": "stretch",
                    "flex": 1,
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  pointerEvents="box-none"
                  style={
                    Object {
                      "alignItems": "flex-start",
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "justifyContent": "center",
                      "marginStart": 0,
                    }
                  }
                />
                <View
                  pointerEvents="box-none"
                  style={
                    Object {
                      "justifyContent": "center",
                      "marginHorizontal": 16,
                      "maxWidth": 718,
                    }
                  }
                >
                  <Text
                    accessibilityRole="header"
                    aria-level="1"
                    numberOfLines={1}
                    style={
                      Object {
                        "color": "rgb(28, 28, 30)",
                        "fontSize": 17,
                        "fontWeight": "600",
                      }
                    }
                  >
                    Towns
                  </Text>
                </View>
                <View
                  pointerEvents="box-none"
                  style={
                    Object {
                      "alignItems": "flex-end",
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "justifyContent": "center",
                      "marginEnd": 0,
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    onLayout={[Function]}
    pointerEvents="auto"
    style={
      Object {
        "backgroundColor": "rgb(255, 255, 255)",
        "borderTopColor": "rgb(216, 216, 216)",
        "borderTopWidth": 0.5,
        "bottom": 0,
        "elevation": 8,
        "height": 49,
        "left": 0,
        "paddingBottom": 0,
        "paddingHorizontal": 0,
        "position": null,
        "right": 0,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
  >
    <View
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
    <View
      accessibilityRole="tablist"
      style={
        Object {
          "flex": 1,
          "flexDirection": "row",
        }
      }
    >
      <View
        accessibilityLabel="Towns, tab, 1 of 5"
        accessibilityRole="button"
        accessibilityState={
          Object {
            "selected": true,
          }
        }
        accessibilityStates={
          Array [
            "selected",
          ]
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
            },
            Object {
              "backgroundColor": "transparent",
            },
            Object {
              "flexDirection": "column",
              "justifyContent": "flex-end",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "position": "absolute",
                  "width": "100%",
                },
                Object {
                  "opacity": 1,
                },
              ]
            }
          >
            <button
              className="sc-bdvvtL cPZgXy"
            >
              <Text />
            </button>
          </View>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "position": "absolute",
                  "width": "100%",
                },
                Object {
                  "opacity": 0,
                },
              ]
            }
          >
            <button
              className="sc-bdvvtL cPZgXy"
            >
              <Text />
            </button>
          </View>
        </View>
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "textAlign": "center",
              },
              Object {
                "color": "rgb(0, 122, 255)",
              },
              Object {
                "fontSize": 10,
              },
              undefined,
            ]
          }
        >
          Towns
        </Text>
      </View>
      <View
        accessibilityLabel="Likes, tab, 2 of 5"
        accessibilityRole="button"
        accessibilityState={
          Object {
            "selected": false,
          }
        }
        accessibilityStates={Array []}
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
            },
            Object {
              "backgroundColor": "transparent",
            },
            Object {
              "flexDirection": "column",
              "justifyContent": "flex-end",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "position": "absolute",
                  "width": "100%",
                },
                Object {
                  "opacity": 0,
                },
              ]
            }
          >
            <button
              className="sc-bdvvtL cPZgXy"
            >
              <Text />
            </button>
          </View>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "position": "absolute",
                  "width": "100%",
                },
                Object {
                  "opacity": 1,
                },
              ]
            }
          >
            <button
              className="sc-bdvvtL cPZgXy"
            >
              <Text />
            </button>
          </View>
        </View>
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "textAlign": "center",
              },
              Object {
                "color": "#8E8E8F",
              },
              Object {
                "fontSize": 10,
              },
              undefined,
            ]
          }
        >
          Likes
        </Text>
      </View>
      <View
        accessibilityLabel="Match, tab, 3 of 5"
        accessibilityRole="button"
        accessibilityState={
          Object {
            "selected": false,
          }
        }
        accessibilityStates={Array []}
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
            },
            Object {
              "backgroundColor": "transparent",
            },
            Object {
              "flexDirection": "column",
              "justifyContent": "flex-end",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "position": "absolute",
                  "width": "100%",
                },
                Object {
                  "opacity": 0,
                },
              ]
            }
          >
            <button
              className="sc-bdvvtL cPZgXy"
            >
              <Text />
            </button>
          </View>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "position": "absolute",
                  "width": "100%",
                },
                Object {
                  "opacity": 1,
                },
              ]
            }
          >
            <button
              className="sc-bdvvtL cPZgXy"
            >
              <Text />
            </button>
          </View>
        </View>
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "textAlign": "center",
              },
              Object {
                "color": "#8E8E8F",
              },
              Object {
                "fontSize": 10,
              },
              undefined,
            ]
          }
        >
          Match
        </Text>
      </View>
      <View
        accessibilityLabel="Message, tab, 4 of 5"
        accessibilityRole="button"
        accessibilityState={
          Object {
            "selected": false,
          }
        }
        accessibilityStates={Array []}
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
            },
            Object {
              "backgroundColor": "transparent",
            },
            Object {
              "flexDirection": "column",
              "justifyContent": "flex-end",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "position": "absolute",
                  "width": "100%",
                },
                Object {
                  "opacity": 0,
                },
              ]
            }
          >
            <button
              className="sc-bdvvtL cPZgXy"
            >
              <Text />
            </button>
          </View>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "position": "absolute",
                  "width": "100%",
                },
                Object {
                  "opacity": 1,
                },
              ]
            }
          >
            <button
              className="sc-bdvvtL cPZgXy"
            >
              <Text />
            </button>
          </View>
        </View>
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "textAlign": "center",
              },
              Object {
                "color": "#8E8E8F",
              },
              Object {
                "fontSize": 10,
              },
              undefined,
            ]
          }
        >
          Message
        </Text>
      </View>
      <View
        accessibilityLabel="Profile, tab, 5 of 5"
        accessibilityRole="button"
        accessibilityState={
          Object {
            "selected": false,
          }
        }
        accessibilityStates={Array []}
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
            },
            Object {
              "backgroundColor": "transparent",
            },
            Object {
              "flexDirection": "column",
              "justifyContent": "flex-end",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "position": "absolute",
                  "width": "100%",
                },
                Object {
                  "opacity": 0,
                },
              ]
            }
          >
            <button
              className="sc-bdvvtL cPZgXy"
            >
              <Text />
            </button>
          </View>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "minWidth": 25,
                  "position": "absolute",
                  "width": "100%",
                },
                Object {
                  "opacity": 1,
                },
              ]
            }
          >
            <button
              className="sc-bdvvtL cPZgXy"
            >
              <Text />
            </button>
          </View>
        </View>
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "textAlign": "center",
              },
              Object {
                "color": "#8E8E8F",
              },
              Object {
                "fontSize": 10,
              },
              undefined,
            ]
          }
        >
          Profile
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
